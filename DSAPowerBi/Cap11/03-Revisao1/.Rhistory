install.packages("ggplot2")
install.packages("ggplot2")
setwd("~/GitHub/Personal/DSAPowerBi/Cap11/01-Medidas-Posicao")
getwd()
# Carregando o dataset
vendas <- read.csv("Vendas.csv", fileEncoding = "windows-1252")
setwd("C:\Users\Claudia\Documents\GitHub\Personal\DSAPowerBi\Cap11\01-Medidas-Posicao")
getwd()
setwd("~\GitHub\Personal\DSAPowerBi\Cap11\01-Medidas-Posicao")
getwd()
setwd("~\GitHub\Personal\DSAPowerBi\Cap11\01-Medidas-Posicao")
setwd("~/GitHub/Personal/DSAPowerBi/Cap11/01-Medidas-Posicao")
getwd()
vendas <- read.csv("Vendas.csv", fileEncoding = "windows-1252")
View(vendas)
str(vendas)
summary(vendas$Valor)
summary(vendas$Custo)
mean(vendas$Valor)
mean(vendas$Custo)
mean(vendas$Valor, trim = 0.1)
mean(vendas$Valor, na.rm = TRUE)
weighted.mean(vendas$Valor, w = vendas$Custo)
median(vendas$Valor)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
result <- getmode(vendas$Valor)
print(result)
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
ggplot(vendas) + stat_summary(aes(x = vendas$Estado, y = vendas$Valor),
fun.y = mean, geom = "bar",
fill = "lightgreen", col = "grey50")
setwd("~/GitHub/Personal/DSAPowerBi/Cap11/02-Medidas-Dispersao")
getwd()
vendas <- read.csv("Vendas.csv", fileEncoding = "windows-1252")
str(vendas)
summary(vendas$Valor)
var(vendas$Valor)
sd(vendas$Valor)
CV <- sd(vendas$Valor)/mean(vendas$Valor)(100)
CV <- sd(vendas$Valor)/mean(vendas$Valor)*(100)
print(CV)
setwd("~/GitHub/Personal/DSAPowerBi/Cap11/03-Revisao1")
setwd("~/GitHub/Personal/DSAPowerBi/Cap11/03-Revisao1")
getwd()
setwd("~/GitHub/Personal/DSAPowerBi/Cap11/03-Revisao1")
setwd("~/GitHub/Personal/DSAPowerBi/Cap11/03-Revisao1")
getwd()
amostras <- read.csv("amostras.csv", fileEncoding = "windows-1252")
View(amostras)
str(amostras)
summary(amostras$AmostraA)
summary(amostras$AmostraB)
mean(amostras$AmostraA)
mean(amostras$AmostraB)
sd(amostras$AmostraA)
sd(amostras$AmostraB)
cvA <- sd(amostras$AmostraA) / mean(amostras$AmostraA) * 100
cvB <- sd(amostras$AmostraB) / mean(amostras$AmostraA) * 100
cvA
cvB
var(amostras$AmostraA)
var(amostras$AmostraB)
var(amostras$AmostraA)
var(amostras$AmostraB)
calculaModa <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
calculaModa(amostras$AmostraA)
calculaModa(amostras$AmostraB)
median(amostras$AmostraA)
median(amostras$AmostraB)
